#!/usr/local/bin/bash

# usage: $tumblr-backup --sites="blog.jbryanscott.com jbryanscott.tumblr.com" --destination="$HOME/tumblr-backups/`date`"

# Initialize defaults
backup_destination="$HOME/tumblr-backups/`date -u '+%Y-%m-%d_%H-%M-%S'`"
is_reduce_to_zip=false

# Read inputs
for i in "$@"; do
    case $i in
        -s=*|--sites=*|--tumblr_sites=*)
            tumblr_sites="${i#*=}" ;;
        -d=*|--destination=*)
            backup_destination="${i#*=}" ;;
        --reduce-to-zip)
            is_reduce_to_zip=true ;;
        *)
            ;;
    esac
    shift
done

if [ -z "$tumblr_sites" ]; then
    echo "$(tput setaf 1)Fatal: -s | --sites | --tumblr_sites must not be empty.$(tput setaf 7)"
    exit
fi

echo "$(tput setaf 1)Starting tumblr-backup from <$tumblr_sites> to <$backup_destination> at $(date -u && tput setaf 7)"
for site in $tumblr_sites
do
    echo "Downloading $site..."

    wget \
     --directory-prefix="$backup_destination"\
     --recursive \
     --adjust-extension \
     --html-extension \
     --convert-links \
     --restrict-file-names=unix \
     --span-hosts \
     --quiet \
     --show-progress \
     --progress=bar:force \
     --domains "$site, media.tumblr.com" \
         $site
done
echo "$(tput setaf 1)Completed tumblr-backup from <$tumblr_sites> to $backup_destination> at $(date -u && tput setaf 7)"

if [ "$is_reduce_to_zip" = true ]; then
    echo "$(tput setaf 1)Creating .zip umblr-backup from <$tumblr_sites> to $backup_destination> at $(date -u && tput setaf 7)"
    for folder in $(cd $backup_destination && ls -d */)
    do
        zip -r "$backup_destination/${folder%%/}.zip" "$backup_destination/$folder"
        rm -rf "$backup_destination/$folder"
    done
fi